{"version":3,"sources":["services/constants.js","services/api-service.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","services/notification.js","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/LoadMoreButton/LoadMoreButton.styled.jsx","components/LoadMoreButton/LoadMoreButton.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["API_KEY","searchQuery","page","a","url","axios","get","data","hits","defaults","baseURL","fetchImages","Header","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","SearchBar","onSubmit","useState","setSearchQuery","resetState","e","preventDefault","trim","info","title","text","delay","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","toLowerCase","Item","Image","ImageGalleryItem","tags","previewImg","selectedImage","src","alt","onClick","List","ImageGallery","images","map","id","webformatURL","largeImageURL","Button","LoadMoreButton","SpinnerContainer","Spinner","color","height","width","ModalOverlay","ModalContainer","modalRoot","document","querySelector","Modal","selectedImg","onClose","useEffect","window","addEventListener","handleKeyDown","code","createPortal","currentTarget","App","setPage","setImages","setSelectedImg","setAlt","status","setStatus","then","length","Error","prevImages","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","console","log","handleFormSubmit","query","loadMoreBtnClick","prevPage","handleSelectedImage","largeImageUrl","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.43d30157.chunk.js","sourcesContent":["const API_KEY = '21672649-f94e47de3526d257f0e860889';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\nexport { API_KEY, BASE_URL };","import axios from 'axios';\r\nimport { BASE_URL, API_KEY } from \"../services/constants\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n        \r\nasync function fetchImages(searchQuery, page) {\r\n    const url = `/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`\r\n    const { data } = await axios.get(url);\r\n    return data.hits;\r\n}\r\n    \r\nexport default fetchImages;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  margin-bottom: 25px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\ndisplay: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormButton = styled.button`\r\ndisplay: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n  opacity: 1;\r\n}\r\n`;\r\n\r\nexport const SearchFormButtonLabel = styled.span`\r\nposition: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\ndisplay: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n`;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {onShowInfoNotification} from \"../../services/notification\"\r\nimport {Header, SearchForm, SearchFormButton, SearchFormButtonLabel, SearchFormInput} from \"./SearchBar.styled\"\r\n\r\n\r\nexport default function SearchBar({onSubmit}) {\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const handleSearchQueryChange = (e) => {\r\n        setSearchQuery(e.target.value.toLowerCase())\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (searchQuery.trim() === \"\") {\r\n            onShowInfoNotification();\r\n            return;\r\n        }\r\n\r\n        onSubmit(searchQuery);\r\n        resetState();\r\n    }\r\n\r\n    const resetState = () => {\r\n        setSearchQuery(\"\");\r\n    }\r\n\r\n    return (\r\n         <Header>\r\n            <SearchForm onSubmit={handleSubmit}>\r\n                <SearchFormButton type=\"submit\">\r\n                <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n                </SearchFormButton>\r\n                    <SearchFormInput\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        name=\"searchQuery\"\r\n                        value={searchQuery}\r\n                        onChange={handleSearchQueryChange}/>\r\n            </SearchForm>\r\n            </Header>\r\n    )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n        onSubmit: PropTypes.func,\r\n    }","import {info, error } from \"@pnotify/core\";\r\nimport '@pnotify/core/dist/Material.css';\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\n\r\nconst onShowInfoNotification = () => {\r\n     info ({\r\n    title: 'Invalid request',\r\n    text: `The search field is empty!`,\r\n         delay: 2000,\r\n     });\r\n}\r\n\r\nconst onShowErrorNotification = () => {\r\n     error ({\r\n    title: 'Invalid request',\r\n    text: `Please enter the right query!`,\r\n    delay: 2000,\r\n     });\r\n}\r\n\r\nexport { onShowInfoNotification, onShowErrorNotification };","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Item, Image} from \"./ImageGalleryItem.styled\"\r\n\r\nexport default function ImageGalleryItem({tags, previewImg, selectedImage}) {\r\n    return (\r\n        <Item>\r\n            <Image src={previewImg} alt={tags} onClick={selectedImage}/>\r\n        </Item>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    tags: PropTypes.string.isRequired,\r\n    previewImg: PropTypes.string.isRequired,\r\n    selectedImage: PropTypes.func,\r\n}\r\n\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  /* margin-bottom: 25px; */\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const ImageGalleryItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const ImageGalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\"\r\nimport { List } from \"./ImageGallery.styled\";\r\n\r\nexport default function ImageGallery({images, selectedImage}) {\r\n    return (\r\n        <List>\r\n            {images.map(({id, webformatURL, tags, largeImageURL}) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    previewImg={webformatURL}\r\n                    tags={tags}\r\n                    selectedImage={()=> selectedImage(largeImageURL, tags)}/>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n    })),\r\n    selectedImage:PropTypes.func,\r\n}\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Button = styled.button`\r\npadding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n  0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n  background-color: #303f9f;\r\n}\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"./LoadMoreButton.styled\";\r\n\r\nexport default function LoadMoreButton({onClick}) {\r\n    return (\r\n        <Button type=\"button\" onClick={onClick}>Load more</Button>\r\n    )\r\n}\r\n\r\nLoadMoreButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n}","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const SpinnerContainer = styled.div`\r\nposition: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {SpinnerContainer} from \"./Spinner.styled\"\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <SpinnerContainer>\r\n            <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={280} width={280} />\r\n        </SpinnerContainer>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n\r\nexport const Image = styled.img`\r\nwidth: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ModalOverlay, ModalContainer, Image } from \"./Modal.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({selectedImg, tags, onClose}) {\r\n     \r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n        return () => {\r\n        window.addEventListener(\"keydown\", handleKeyDown)\r\n        }\r\n    })\r\n    \r\n    const handleKeyDown = e => {\r\n        if (e.code === \"Escape\") {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    const handleBackdropClick = (e) => {\r\n        if (e.target === e.currentTarget) {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    return createPortal(\r\n            <ModalOverlay onClick={handleBackdropClick}>\r\n             <ModalContainer>\r\n                 <Image src={selectedImg} alt={tags}/>\r\n             </ModalContainer>\r\n            </ModalOverlay>, modalRoot)\r\n}\r\n\r\nModal.propTypes = {\r\n        selectedImg: PropTypes.string,\r\n        tags: PropTypes.string,\r\n        onClose: PropTypes.func,\r\n    }","import React, { useState, useEffect } from \"react\";\nimport fetchImages from \"./services/api-service\";\nimport {onShowErrorNotification} from \"./services/notification\"\nimport SearchBar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport LoadMoreButton from \"./components/LoadMoreButton\";\nimport Spinner from \"./components/Spinner\";\nimport Modal from \"./components/Modal\";\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [alt, setAlt] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return\n    }\n\n    setStatus(\"pending\");\n\n    fetchImages(searchQuery, page).then((images) => {\n\n      if (!images.length) {\n        throw new Error();\n      }\n      \n      setImages(prevImages => [...prevImages, ...images]);\n      setStatus(\"resolved\");\n\n      page > 1 &&\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n      \n    }).catch((error) => {\n      console.log(error);\n      onShowErrorNotification();\n      setStatus(\"rejected\");\n    })\n  }, [searchQuery, page])\n\n  const handleFormSubmit = query => {\n    if (searchQuery === query) {\n      return\n    }\n    \n    resetState();\n    setSearchQuery(query);\n  };\n\n  const loadMoreBtnClick = () => {\n    setPage(prevPage => prevPage + 1);\n  }\n\n  const handleSelectedImage = (largeImageUrl, tags) => {\n    setSelectedImg(largeImageUrl);\n    setAlt(tags);\n  }\n  \n  const closeModal = () => {\n    setSelectedImg(null)\n  }\n\n  const resetState = () => {\n    setSearchQuery(\"\");\n    setPage(1);\n    setImages([]);\n    setSelectedImg(null);\n    setAlt(null);\n    setStatus(\"idle\");\n  }\n\n  if (status === \"idle\") {\n    return <SearchBar onSubmit={handleFormSubmit} />\n  }\n\n  if (status === \"pending\") {\n    return (\n      <>\n        <SearchBar onSubmit={handleFormSubmit} />\n        <Spinner />\n        <ImageGallery images={images} selectedImage={handleSelectedImage} />\n        {images.length > 0 && <LoadMoreButton onClick={loadMoreBtnClick} />}\n      </>\n    )\n  }\n\n  if (status === \"resolved\") {\n    return (\n      <>\n        <SearchBar onSubmit={handleFormSubmit} />\n        <ImageGallery images={images} selectedImage={handleSelectedImage} />\n        {selectedImg && <Modal selectedImg={selectedImg} tags={alt} onClose={closeModal} />}\n        {images.length > 0 && <LoadMoreButton onClick={loadMoreBtnClick} />}\n      </>\n    )\n  }\n\n  if (status === \"rejected\") {\n    return <SearchBar onSubmit={handleFormSubmit} />\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n"],"sourceRoot":""}